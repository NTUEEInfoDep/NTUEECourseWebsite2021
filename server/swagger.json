{
  "openapi": "3.0.0",
  "info": {
    "title": "NTUEE course website",
    "version": "1.0.0",
    "description": "NTUEE course website api"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "local environment"
    }
  ],
  "tags": [
    {
      "name": "Session",
      "description": "Everything about Logins"
    },
    {
      "name": "Management",
      "description": "other actions about system and users"
    },
    {
      "name": "User",
      "description": "Operations about users"
    },
    {
      "name": "Course",
      "description": "Get, add or delete courses"
    },
    {
      "name": "Selection",
      "description": "about selection of courses"
    },
    {
      "name": "Distribution",
      "description": "distribute the selection of courses and generate the result"
    }
  ],
  "paths": {
    "/session": {
      "get": {
        "tags": ["Session"],
        "summary": "get current login",
        "description": "get current userID and authority",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "example": "B12345678"
                    },
                    "authority": {
                      "type": "string",
                      "example": "User"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Hasn't login yet"
          }
        }
      },
      "post": {
        "tags": ["Session"],
        "summary": "log in",
        "description": "log in",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string",
                    "example": "B00000000"
                  },
                  "password": {
                    "type": "string",
                    "example": "1111"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "example": "B12345678"
                    },
                    "authority": {
                      "type": "string",
                      "example": "User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed, hasn't entered or can't find userID"
          },
          "401": {
            "description": "Wrong password"
          }
        }
      },
      "delete": {
        "tags": ["Session"],
        "summary": "log out",
        "description": "delete session",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/opentime": {
      "get": {
        "description": "Get open time",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number",
                      "example": 1600000000
                    },
                    "end": {
                      "type": "number",
                      "example": 1700000000
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Management"],
        "summary": "update open time",
        "description": "Change open time",
        "requestBody": {
          "description": "Enter **Unix timestamp**",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "number",
                    "example": 1600000000
                  },
                  "end": {
                    "type": "number",
                    "example": 1700000000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Format error"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/courses": {
      "get": {
        "tags": ["Course"],
        "summary": "get a list of courses with selected attributes",
        "description": "Get a list of all courses with selected attributes. <br/>Use query parameters to specify the attributes you want (id is default. Name, type, description and options are optional). <br/>For example, if you wanna get id, name and type, the request will be like \"http://localhost:8000/api/courses?name=1&type=1\"",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["1"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["1"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "description",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["1"]
            }
          },
          {
            "name": "options",
            "in": "query",
            "description": "options",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["1"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name (optional)": {
                        "type": "string"
                      },
                      "type (optional)": {
                        "type": "string"
                      },
                      "description (optional)": {
                        "type": "string"
                      },
                      "options (optional)": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "priority (有些可能沒有這項）": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "course1"
                  },
                  {
                    "id": "course2"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "get a list of users with selected attributes",
        "description": "Get a list of all users with optional attributes. <br/>Use query parameters to specify the attributes you want (id is default. Name, grade, authority are optional). <br/>For example, if you wanna get id, authority, and grade, the request will be like \"http://localhost:8000/api/users?grade=1&authority=1\"",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["1"]
            }
          },
          {
            "name": "grade",
            "in": "query",
            "description": "grade",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["1"]
            }
          },
          {
            "name": "authority",
            "in": "query",
            "description": "authority",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["1"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "array of objects": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id(default)": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "grade": {
                        "type": "number"
                      },
                      "authority": {
                        "type": "number"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "B22222222",
                    "name": "C",
                    "grade": 1,
                    "authority": 1
                  },
                  {
                    "id": "B00000000",
                    "name": "A",
                    "grade": 2,
                    "authority": 2
                  },
                  {
                    "id": "B99999999",
                    "name": "K",
                    "grade": 1,
                    "authority": 0
                  },
                  {
                    "id": "B11111111",
                    "name": "B",
                    "grade": 3,
                    "authority": 1
                  },
                  {
                    "id": "B44444444",
                    "name": "F",
                    "grade": 4,
                    "authority": 0
                  },
                  {
                    "id": "B66666666",
                    "name": "H",
                    "grade": 5,
                    "authority": 0
                  },
                  {
                    "id": "B77777777",
                    "name": "I",
                    "grade": 2,
                    "authority": 0
                  },
                  {
                    "id": "B55555555",
                    "name": "G",
                    "grade": 2,
                    "authority": 0
                  },
                  {
                    "id": "B88888888",
                    "name": "J",
                    "grade": 4,
                    "authority": 0
                  },
                  {
                    "id": "B33333333",
                    "name": "E",
                    "grade": 1,
                    "authority": 0
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "description": "Add new users",
        "tags": ["User"],
        "summary": "add users",
        "requestBody": {
          "description": "<h2>authority</h2> <b>2:</b> Admin<br> <b>1:</b> Maintainer<br> <b>0:</b> User",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string"
                    },
                    "grade": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "authority": {
                      "type": "number"
                    }
                  }
                }
              },
              "example": [
                {
                  "userID": "b787",
                  "grade": 2,
                  "password": "1111",
                  "name": "A",
                  "authority": 2
                },
                {
                  "userID": "b1338",
                  "grade": 3,
                  "password": "1111",
                  "name": "B",
                  "authority": 1
                }
              ]
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Type error, Format error"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "delete certain users",
        "description": "Delete particular users with a list specifying their ids",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": ["b9213849", "b1432797"]
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "No input"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "update students",
        "description": "Change the content of the student of designated userIDs",
        "requestBody": {
          "description": "<h2>authority</h2> <b>2:</b> Admin<br> <b>1:</b> Maintainer<br> <b>0:</b> User",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "authority": {
                      "type": "number"
                    },
                    "grade": {
                      "type": "number"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": [
                {
                  "userID": "b787",
                  "grade": 2,
                  "password": "1111",
                  "name": "A",
                  "authority": 2
                },
                {
                  "userID": "b1338",
                  "grade": 3,
                  "password": "1111",
                  "name": "B",
                  "authority": 1
                }
              ]
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "No input, format error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/password": {
      "put": {
        "tags": ["Management"],
        "summary": "change password",
        "description": "admin changes certain users' password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string"
                    },
                    "new_password": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": [
                {
                  "userID": "B33333333",
                  "new_password": "2222"
                },
                {
                  "userID": "B44444444",
                  "new_password": "2222"
                }
              ],
              "encoding": {
                "options": {
                  "style": "form",
                  "explode": true
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Failed, Type error"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/course": {
      "post": {
        "tags": ["Course"],
        "summary": "add courses",
        "description": "Add new course",
        "requestBody": {
          "description": "<h2>type</h2> <b>\"1\", \"2\", \"3\", \"4\":</b> 一,二,三,四年級必修<br><b>\"Ten-Select-Two\":</b> 十選二實驗<br><b>\"EE-Lab\":</b> 電電實驗<br><h2>limit</h2>人數上限<br><h2>priority</h2><b>0:</b> 優先序與年級無關<br><b>-1:</b> 高年級優先<br><b>1,2,3,4:</b> 此年級優先<br><b>5:</b> 3,4年級優先<br><h2>以下為兩個課程範例, priority 只有 ten-select-two 會用到，必修及EE-lab無需.description 目前為必要",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "limit": {
                            "type": "number"
                          },
                          "priority(only ten-select-two needs this)": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": [
                {
                  "id": "Electronic-Circuit test",
                  "name": "電路學test",
                  "type": "1",
                  "description": "test",
                  "options": [
                    {
                      "name": "Teacher A",
                      "limit": 1
                    },
                    {
                      "name": "Teacher B",
                      "limit": 1
                    }
                  ]
                },
                {
                  "id": "Ten-Select-Two test",
                  "name": "十選二實驗 test",
                  "type": "Ten-Select-Two",
                  "description": "<p>(1) 請詳閱 <a href=\"https://bit.ly/3o0MrAb\" target=\"_blank\" style=\"color: #45bbff;\">實驗規定</a>，攸關各位的權利。</p><p>(2)特別轉載半導體實驗規定： ★★大學畢業後欲投入半導體領域者，可保留名額  ★★實驗期間需全程戴口罩、穿實驗衣含無塵衣,且著裝後需能自由移動。  ★★需遵守政府、臺大及實驗室之公共安全規定。  ★★環安衛法律條文規定沒有英文部份,若有外藉生不懂中文,將請助教以英文口譯告知。  ★★Electrical Engineering Lab (semiconductor) safety rules: ★In the labs,  students are required</p>",
                  "options": [
                    {
                      "name": "電力電子",
                      "limit": 1,
                      "priority": 0
                    },
                    {
                      "name": "光電",
                      "limit": 1,
                      "priority": 4
                    }
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "The course has already existed, no input, format error"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "tags": ["Course"],
        "summary": "delete courses",
        "description": "Delete courses by **course ID**",
        "requestBody": {
          "description": "<h2>a list of courseID (string)</h2>",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": ["test", "test_course"]
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "No input, format error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "tags": ["Course"],
        "summary": "update courses",
        "description": "Change the content of the course of designated ids",
        "requestBody": {
          "description": "<h2>type</h2> <b>\"1\", \"2\", \"3\", \"4\":</b> 一,二,三,四年級必修<br><b>\"Ten-Select-Two\":</b> 十選二實驗<br><b>\"EE-Lab\":</b> 電電實驗<br><h2>limit</h2>人數上限<br><h2>priority</h2><b>0:</b> 優先序與年級無關<br><b>-1:</b> 高年級優先<br><b>1,2,3,4:</b> 此年級優先<br><b>5:</b> 3,4年級優先<br><h2>由 id 指定要更改的課程, update 該課程的剩餘所有項目</h2>",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "limit": {
                            "type": "number"
                          },
                          "priority (only ten-select-two needs this)": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": [
                {
                  "id": "Electronic-Circuit test",
                  "name": "new 電路學test",
                  "type": "1",
                  "description": "new test",
                  "options": [
                    {
                      "name": "Teacher C",
                      "limit": 2
                    },
                    {
                      "name": "Teacher D",
                      "limit": 3
                    }
                  ]
                },
                {
                  "id": "Ten-Select-Two test",
                  "name": "new 十選二實驗 test",
                  "type": "Ten-Select-Two",
                  "description": "new test",
                  "options": [
                    {
                      "name": "電磁波",
                      "limit": 1,
                      "priority": 0
                    },
                    {
                      "name": "生醫工程",
                      "limit": 1,
                      "priority": 0
                    }
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "No input, format error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/distribute": {
      "post": {
        "tags": ["Distribution"],
        "summary": "分發",
        "description": "Run distribution algorithm",
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "distribute server error"
          },
          "403": {
            "description": "permission deny"
          }
        }
      }
    },
    "/specific_distribute": {
      "post": {
        "tags": ["Distribution"],
        "summary": "分發(有範圍的)",
        "description": "Run distribution algorithm(test). <br>If request body is empty, it will run the original distribution; otherwise, it will run the distribution with specific students given by request body.",
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "course_id": {
                      "type": "string"
                    },
                    "students": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": [
                {
                  "course_id": "Ten-Select-Two",
                  "students": ["B00000000", "B11111111"]
                },
                {
                  "course_id": "Electronics-one",
                  "students": ["B00000000", "B11111111"]
                }
              ]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "distribute server error"
          },
          "403": {
            "description": "permission deny"
          }
        }
      }
    },
    "/authority": {
      "put": {
        "tags": ["Management"],
        "summary": "update authority",
        "description": "Change someone's authority",
        "requestBody": {
          "description": "<h2>authority</h2> <b>2:</b> Admin<br> <b>1:</b> Maintainer<br> <b>0:</b> User",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "example": "B33333333"
                    },
                    "authority": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              },
              "example": [
                {
                  "userID": "B33333333",
                  "authority": 1
                },
                {
                  "userID": "B22222222",
                  "authority": 0
                }
              ]
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/selections/{courseID}": {
      "get": {
        "tags": ["Selection"],
        "summary": "get a user's selection on certain course",
        "description": "Show the course selection status of a user according to current session",
        "parameters": [
          {
            "name": "courseID",
            "in": "path",
            "description": "select the id of the course that you want to know your selections",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Ten-Select-Two"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "十選二實驗"
                    },
                    "type": {
                      "type": "string",
                      "example": "Ten-Select-Two"
                    },
                    "description": {
                      "type": "string",
                      "example": "description"
                    },
                    "selected": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["電力電子", "半導體", "嵌入式系統"]
                    },
                    "unselected": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "自動控制",
                        "數電實驗",
                        "電磁波",
                        "通信專題",
                        "網路與多媒體",
                        "生醫工程",
                        "光電"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Fail"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "tags": ["Selection"],
        "summary": "select courses",
        "description": "select course using path parameter and req body<br><h2>Update the selection of a course </h2>",
        "parameters": [
          {
            "name": "courseID",
            "in": "path",
            "description": "ID of a course",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Ten-Select-Two"
            }
          }
        ],
        "requestBody": {
          "description": "option names",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["電力電子", "半導體", "嵌入式系統"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Format error"
          },
          "403": {
            "description": "Fail"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/preselect": {
      "put": {
        "tags": ["Distribution"],
        "summary": "數電實驗預選",
        "description": "update preselect",
        "requestBody": {
          "description": "send a list of userIDs that are preselected in 數電實驗",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["B11111111", "B44444444", "B99999999"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Format error"
          },
          "403": {
            "description": "Fail"
          },
          "404": {
            "description": "Not found"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/result.csv": {
      "get": {
        "tags": ["Distribution"],
        "summary": "generate distrubution result",
        "description": "get distribution result (csv)<br><h2>要先跑 /distribute</h2>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/csv": {
                "schema": {
                  "type": "string",
                  "example": "studentID,courseName,optionName\nB00000000,電路學,老師A\nB11111111,機率與統計,老師H"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "503": {
        "description": "Service close",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "number",
                  "example": 1600000000
                },
                "end": {
                  "type": "number",
                  "example": 1700000000
                }
              }
            }
          }
        }
      }
    }
  }
}
